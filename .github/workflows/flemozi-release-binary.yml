name: Flemozi Release Binary
on:
  workflow_dispatch:
    inputs:
      version:
        description: Version to release (x.x.x)
        default: 0.1.1
        required: true
      channel:
        type: choice
        description: Release Channel
        required: true
        options:
          - stable
          - nightly
        default: nightly
      dry_run:
        description: Dry run
        required: true
        type: boolean
        default: true

permissions:
  contents: write

env:
  FLUTTER_VERSION: '3.13.2'

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.10.0
        with:
          cache: true
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Get Current Date
        id: current-date
        run: |
          echo "CurrentDate=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Create Stable .env
        if: ${{ inputs.channel == 'stable' }}
        run: echo '${{ secrets.DOTENV_RELEASE }}' > .env

      - name: Create Nightly .env
        if: ${{ inputs.channel == 'nightly' }}
        run: echo '${{ secrets.DOTENV_NIGHTLY }}' > .env

      

      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y tar\
            clang\
            cmake\
            ninja-build\
            pkg-config\
            libgtk-3-dev\
            make python3-pip\
            python3-setuptools\
            patchelf\
            desktop-file-utils\
            libgdk-pixbuf2.0-dev\
            fakeroot\
            strace\
            fuse\
            libunwind-dev\
            locate\
            patchelf

      - name: Install AppImage Tool
        run: |
          wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool
          mv appimagetool /usr/local/bin/

      - name: Replace pubspec version and BUILD_VERSION Env (nightly)
        if: ${{ inputs.channel == 'nightly' }}
        run: |
          curl -sS https://webi.sh/yq | sh
          yq -i '.version |= sub("\+\d+", "+${{ inputs.channel }}.")' pubspec.yaml
          yq -i '.version += strenv(GITHUB_RUN_NUMBER)' pubspec.yaml
          echo "BUILD_VERSION=${{ inputs.version }}+${{ inputs.channel }}.${{ github.run_number }}" >> $GITHUB_ENV

      - name: BUILD_VERSION Env (stable)
        if: ${{ inputs.channel == 'stable' }}
        run: |
          echo "BUILD_VERSION=${{ inputs.version }}" >> $GITHUB_ENV

      - name: Replace Version in files
        run: |
          sed -i 's|%{{APPDATA_RELEASE}}%|<release version="${{ env.BUILD_VERSION }}" date="${{ env.CurrentDate }}" />|' linux/dev.krtirtho.Flemozi.appdata.xml
      

      ### Running flutter_distributor 3 times to mitigate a bug in flutter_distributor
      ### causing RPATH to be set incorrectly for deb packages
      ### 
      ### alias dpkg-deb="dpkg-deb -Zxz" is used to mitigate a bug in debian dpkg
      ### caused by unsupported zstd compression. -Zxz instrcuts dpkg-deb to use
      ### xz compression instead of zstd
      - name: Build Linux Packages
        run: |
          flutter config --enable-linux-desktop
          flutter pub get
          dart pub global activate flutter_distributor
          dart run build_runner build --delete-conflicting-outputs
          alias dpkg-deb="dpkg-deb -Zxz"
          flutter_distributor package --platform=linux --targets=deb
          flutter_distributor package --platform=linux --targets=appimage
          flutter_distributor package --platform=linux --targets=rpm
          flutter clean

      - name: Create tar.xz (stable)
        if: ${{ inputs.channel == 'stable' }}
        run: |
          flutter build linux
          make tar VERSION=${{ env.BUILD_VERSION }}
      
      - name: Create tar.xz (nightly)
        if: ${{ inputs.channel == 'nightly' }}
        run: |
          flutter build linux
          make tar VERSION=nightly

      - name: Move Files to dist
        run: |
          mv build/flemozi-linux-*-x86_64.tar.xz dist/
          mv dist/**/flemozi-*-linux.deb dist/Flemozi-linux-x86_64.deb
          mv dist/**/flemozi-*-linux.rpm dist/Flemozi-linux-x86_64.rpm
          mv dist/**/flemozi-*-linux.AppImage dist/Flemozi-linux-x86_64.AppImage

      - uses: actions/upload-artifact@v4
        with:
          name: Flemozi-Release-Binaries
          path: dist/

  # upload:
  #   runs-on: ubuntu-22.04
  #   needs:
  #     - linux
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: Flemozi-Release-Binaries
  #         path: ./Flemozi-Release-Binaries

  #     - name: Install dependencies
  #       run: sudo apt-get install tree -y

  #     - name: Generate Checksums
  #       run: |
  #         tree .
  #         md5sum Flemozi-Release-Binaries/* >> RELEASE.md5sum
  #         sha256sum Flemozi-Release-Binaries/* >> RELEASE.sha256sum
  #         sed -i 's|Flemozi-Release-Binaries/||' RELEASE.sha256sum RELEASE.md5sum

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: Flemozi-Release-Binaries
  #         path: |
  #           RELEASE.md5sum
  #           RELEASE.sha256sum

  #     - name: Upload Release Binaries (stable)
  #       if: ${{ !inputs.dry_run && inputs.channel == 'stable' }}
  #       uses: ncipollo/release-action@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         tag: v${{ inputs.version }} # mind the "v" prefix
  #         omitBodyDuringUpdate: true
  #         omitNameDuringUpdate: true
  #         omitPrereleaseDuringUpdate: true
  #         allowUpdates: true
  #         artifacts: Flemozi-Release-Binaries/*,RELEASE.sha256sum,RELEASE.md5sum

  #     - name: Upload Release Binaries (nightly)
  #       if: ${{ !inputs.dry_run && inputs.channel == 'nightly' }}
  #       uses: ncipollo/release-action@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         tag: nightly
  #         omitBodyDuringUpdate: true
  #         omitNameDuringUpdate: true
  #         omitPrereleaseDuringUpdate: true
  #         allowUpdates: true
  #         artifacts: Flemozi-Release-Binaries/*,RELEASE.sha256sum,RELEASE.md5sum
